bash -v ./testing.sh
switchml () {  typeset swfound=1;
 if [ "${MODULES_USE_COMPAT_VERSION:-0}" = '1' ]; then
 typeset swname='main';
 if [ -e /usr/share/Modules/libexec/modulecmd.tcl ]; then
 typeset swfound=0;
 unset MODULES_USE_COMPAT_VERSION;
 fi;
 else
 typeset swname='compatibility';
 if [ -e /usr/share/Modules/libexec/modulecmd-compat ]; then
 typeset swfound=0;
 MODULES_USE_COMPAT_VERSION=1;
 export MODULES_USE_COMPAT_VERSION;
 fi;
 fi;
 if [ $swfound -eq 0 ]; then
 echo "Switching to Modules $swname version";
 source /usr/share/Modules/init/bash;
 else
 echo "Cannot switch to Modules $swname version, command not found";
 return 1;
 fi
}
module () {  unset _mlshdbg;
 if [ "${MODULES_SILENT_SHELL_DEBUG:-0}" = '1' ]; then
 case "$-" in 
 *v*x*)
 set +vx;
 _mlshdbg='vx'
 ;;
 *v*)
 set +v;
 _mlshdbg='v'
 ;;
 *x*)
 set +x;
 _mlshdbg='x'
 ;;
 *)
 _mlshdbg=''
 ;;
 esac;
 fi;
 unset _mlre _mlIFS;
 if [ -n "${IFS+x}" ]; then
 _mlIFS=$IFS;
 fi;
 IFS=' ';
 for _mlv in ${MODULES_RUN_QUARANTINE:-};
 do
 if [ "${_mlv}" = "${_mlv##*[!A-Za-z0-9_]}" -a "${_mlv}" = "${_mlv#[0-9]}" ]; then
 if [ -n "`eval 'echo ${'$_mlv'+x}'`" ]; then
 _mlre="${_mlre:-}${_mlv}_modquar='`eval 'echo ${'$_mlv'}'`' ";
 fi;
 _mlrv="MODULES_RUNENV_${_mlv}";
 _mlre="${_mlre:-}${_mlv}='`eval 'echo ${'$_mlrv':-}'`' ";
 fi;
 done;
 if [ -n "${_mlre:-}" ]; then
 eval `eval ${_mlre}/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash '"$@"'`;
 else
 eval `/usr/bin/tclsh /usr/share/Modules/libexec/modulecmd.tcl bash "$@"`;
 fi;
 _mlstatus=$?;
 if [ -n "${_mlIFS+x}" ]; then
 IFS=$_mlIFS;
 else
 unset IFS;
 fi;
 unset _mlre _mlv _mlrv _mlIFS;
 if [ -n "${_mlshdbg:-}" ]; then
 set -$_mlshdbg;
 fi;
 unset _mlshdbg;
 return $_mlstatus
}
#!/bin/bash
# Test script for the sudoku puzzle
# Authors: Antony 1, Spring 2020

###### Test for bad input to sudoku.c #########

# No args
./sudoku
usage: ./sudoku gameOption [dificulty]

# Bad args
./sudoku badInput
Error: invalid gameOption. 

# No gameDifficulty
./sudoku create
Error: please provide gameDificulty
##### Test for good input to sudoku.c #########
# Test 1
./sudoku solve < common/test1.txt
Solution to the sudoku:
3 1 6 5 7 8 4 9 2 
5 2 9 1 3 4 7 6 8 
4 8 7 6 2 9 5 3 1 
2 6 3 4 1 5 9 8 7 
9 7 4 8 6 3 1 2 5 
8 5 1 7 9 2 6 4 3 
1 3 8 9 4 7 2 5 6 
6 9 2 3 5 1 8 7 4 
7 4 5 2 8 6 3 1 9 
One solution. 

# Test 2
./sudoku solve < common/test2.txt
Solution to the sudoku:
3 1 2 8 6 5 9 4 7 
6 5 7 9 3 4 1 8 2 
8 9 4 1 7 2 5 6 3 
2 4 6 7 9 1 3 5 8 
1 3 5 4 8 6 2 7 9 
7 8 9 5 2 3 4 1 6 
4 7 8 3 1 9 6 2 5 
5 2 3 6 4 8 7 9 1 
9 6 1 2 5 7 8 3 4 
One solution. 

# Test 3
./sudoku solve < common/test3.txt
Solution to the sudoku:
5 3 4 6 7 8 9 1 2 
6 7 2 1 9 5 3 4 8 
1 9 8 3 4 2 5 6 7 
8 5 9 7 6 1 4 2 3 
4 2 6 8 5 3 7 9 1 
7 1 3 9 2 4 8 5 6 
9 6 1 5 3 7 2 8 4 
2 8 7 4 1 9 6 3 5 
3 4 5 2 8 6 1 7 9 
One solution. 

# Testing multiple solution puzzles
./sudoku solve < common/test_multiple_solutions.txt
Solution to the sudoku:
2 9 5 7 4 3 8 6 1 
4 3 1 8 6 5 9 7 2 
8 7 6 1 9 2 5 4 3 
3 8 7 4 5 9 2 1 6 
6 1 2 3 8 7 4 9 5 
5 4 9 2 1 6 7 3 8 
7 6 3 5 3 4 1 8 9 
9 2 8 6 7 1 3 5 4 
1 5 4 9 3 8 6 2 7 
Two or more solutions. 

# Testing with no solutions
./sudoku solve < common/test_no_solutions.txt
Solution to the sudoku:
No solutions. 

# Creating puzzle easy
./sudoku create easy
5 9 8 7 1 3 4 0 6 
7 3 1 6 2 0 0 8 0 
0 0 2 0 8 0 1 0 0 
4 7 0 1 6 8 0 5 2 
0 0 9 0 5 0 3 0 7 
0 1 0 3 9 0 8 0 4 
3 0 0 0 7 1 0 9 0 
0 2 0 9 0 0 0 4 0 
9 0 0 8 4 6 2 0 0 

# Creating puzzle medium
./sudoku create medium
0 9 8 7 1 3 4 0 6 
7 3 1 6 2 0 0 8 0 
0 0 2 0 0 0 1 0 0 
4 7 0 1 6 8 0 5 2 
0 0 9 0 5 0 3 0 7 
0 1 0 3 9 0 0 0 4 
3 0 0 0 7 1 0 9 0 
0 2 0 9 0 0 0 0 0 
9 0 0 0 4 6 2 0 0 

# Creating puzzle hard
./sudoku create hard
0 9 8 7 1 3 0 0 6 
7 3 0 6 2 0 0 8 0 
0 0 2 0 0 0 1 0 0 
4 7 0 1 6 8 0 5 2 
0 0 9 0 5 0 3 0 7 
0 1 0 3 9 0 0 0 0 
3 0 0 0 0 1 0 9 0 
0 2 0 9 0 0 0 0 0 
0 0 0 0 4 6 2 0 0 

# Creating and solving easy
./sudoku create easy | ./sudoku solve
Solution to the sudoku:
5 9 8 7 1 3 4 2 6 
7 3 1 6 2 4 5 8 9 
6 4 2 5 8 9 1 7 3 
4 7 3 1 6 8 9 5 2 
8 6 9 4 5 2 3 1 7 
2 1 5 3 9 7 8 6 4 
3 8 4 2 7 1 6 9 5 
1 2 6 9 3 5 7 4 8 
9 5 7 8 4 6 2 3 1 
One solution. 

# Creating and solving medium
./sudoku create medium | ./sudoku solve
Solution to the sudoku:
5 9 8 7 1 3 4 2 6 
7 3 1 6 2 4 5 8 9 
6 4 2 5 8 9 1 7 3 
4 7 3 1 6 8 9 5 2 
8 6 9 4 5 2 3 1 7 
2 1 5 3 9 7 8 6 4 
3 8 4 2 7 1 6 9 5 
1 2 6 9 3 5 7 4 8 
9 5 7 8 4 6 2 3 1 
One solution. 

# Creating and solving hard
./sudoku create hard | ./sudoku solve
Solution to the sudoku:
5 9 8 7 1 3 4 2 6 
7 3 1 6 2 4 5 8 9 
6 4 2 5 8 9 1 7 3 
4 7 3 1 6 8 9 5 2 
8 6 9 4 5 2 3 1 7 
2 1 5 3 9 7 8 6 4 
3 8 4 2 7 1 6 9 5 
1 2 6 9 3 5 7 4 8 
9 5 7 8 4 6 2 3 1 
One solution. 


##### Test for memory leaks for sudoku.c #########
valgrind --leak-check=full --show-leak-kinds=all ./sudoku create medium  | ./sudoku create medium  
0 9 8 7 1 3 4 0 6 
7 3 1 6 2 0 0 8 0 
0 0 2 0 0 0 1 0 0 
4 7 0 1 6 8 0 5 2 
0 0 9 0 5 0 3 0 7 
0 1 0 3 9 0 0 0 4 
3 0 0 0 7 1 0 9 0 
0 2 0 9 0 0 0 0 0 
9 0 0 0 4 6 2 0 0 
==1954413== Memcheck, a memory error detector
==1954413== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1954413== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1954413== Command: ./sudoku create medium
==1954413== 
==1954413== 
==1954413== Process terminating with default action of signal 13 (SIGPIPE)
==1954413==    at 0x49804B7: write (write.c:26)
==1954413==    by 0x49104CC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1185)
==1954413==    by 0x490F825: new_do_write (fileops.c:453)
==1954413==    by 0x4911588: _IO_new_do_write (fileops.c:430)
==1954413==    by 0x4911588: _IO_do_write@@GLIBC_2.2.5 (fileops.c:427)
==1954413==    by 0x4913281: _IO_flush_all_lockp (genops.c:706)
==1954413==    by 0x49134D8: _IO_cleanup (genops.c:866)
==1954413==    by 0x48CCF91: __run_exit_handlers (exit.c:130)
==1954413==    by 0x48CD03F: exit (exit.c:139)
==1954413==    by 0x48B51A9: (below main) (libc-start.c:342)
==1954413== 
==1954413== HEAP SUMMARY:
==1954413==     in use at exit: 0 bytes in 0 blocks
==1954413==   total heap usage: 37,996 allocs, 37,996 frees, 1,240,656 bytes allocated
==1954413== 
==1954413== All heap blocks were freed -- no leaks are possible
==1954413== 
==1954413== For lists of detected and suppressed errors, rerun with: -s
==1954413== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
